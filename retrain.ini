### MAIN TARGET ###############################################################

[retrain-%{frnlang}]
type = task
deps = retrain/%{frnlang}-eng.dict

### DATA ######################################################################

[retrain/eng-%{frnlang}.%{lang}.tok]
cond = %{lang in ('eng', frnlang)}
outputs = retrain/eng-%{frnlang}.%{frnlang}.tok retrain/eng-%{frnlang}.eng.ids retrain/eng-%{frnlang}.%{frnlang}.ids
dep.retraindata_tok_pairs = src/python/retraindata_tok_pairs.py
recipe =
	set -e
	echo For this recipe to execute successfully, the .tok files for the
	echo relevant documents must already exist. Produce the retrain-%{frnlang}
	echo target in produce.ini to ensure that.
	python3 %{retraindata_tok_pairs} %{frnlang}

### WORD ALIGNMENT ############################################################

# The following rules follow the tutorial at:
# http://fabioticconi.wordpress.com/2011/01/17/how-to-do-a-word-alignment-with-giza-or-mgiza-from-parallel-corpus/

# Convert to lower case
[retrain/eng-%{frnlang}.%{lang}.low]
cond = %{lang in ('eng', frnlang)}
dep.tok = retrain/eng-%{frnlang}.%{lang}.tok
recipe = cat %{tok} | tr '[:upper:]' '[:lower:]' > %{target}

# Create vocabulary files and numeric versions of texts
[retrain/eng-%{frnlang}.%{lang}.%{x}]
cond = %{lang in ('eng', frnlang)}
engsnt = retrain/eng-%{frnlang}.eng.snt
frnsnt = retrain/eng-%{frnlang}.%{frnlang}.snt
engvcb = retrain/eng-%{frnlang}.eng.vcb
frnvcb = retrain/eng-%{frnlang}.%{frnlang}.vcb
outputs =%{engsnt} %{frnsnt} %{engvcb} %{frnvcb}
dep.englow = retrain/eng-%{frnlang}.eng.low
dep.frnlow = retrain/eng-%{frnlang}.%{frnlang}.low
recipe =
	set -e
	set -o pipefail
	./ext/mgizapp/bin/plain2snt %{frnlow} %{englow} -vcb1 %{frnvcb} -vcb2 %{engvcb} -snt1 %{frnsnt} -snt2 %{engsnt}
	touch %{outputs}

# Cluster vocabulary into classes
[retrain/eng-%{frnlang}.%{lang}.vcb.classes]
cond = %{lang in ('eng', frnlang)}
dep.low = retrain/eng-%{frnlang}.%{lang}.low
recipe = ./ext/mgizapp/bin/mkcls -n10 -p%{low} -V%{target}

# Make co-occurrence file
[retrain/%{frnlang}-eng.cooc]
dep.srcvcb = retrain/eng-%{frnlang}.%{frnlang}.vcb
dep.trgvcb = retrain/eng-%{frnlang}.eng.vcb
dep.srcvcbclasses = retrain/eng-%{frnlang}.%{frnlang}.vcb.classes
dep.trgvcbclasses = retrain/eng-%{frnlang}.eng.vcb.classes
dep.snt = retrain/eng-%{frnlang}.%{frnlang}.snt
recipe = ./ext/mgizapp/bin/snt2cooc %{target} %{srcvcb} %{trgvcb} %{snt}

# Word-align
[retrain/%{frnlang}-eng.dict]
dep.srcvcb = retrain/eng-%{frnlang}.%{frnlang}.vcb
dep.trgvcb = retrain/eng-%{frnlang}.eng.vcb
dep.snt = retrain/eng-%{frnlang}.%{frnlang}.snt
dep.cooc = retrain/%{frnlang}-eng.cooc
ncpus = 4
recipe =
	set -e
	set -o pipefail
	(./ext/mgizapp/bin/mgiza -ncpus %{ncpus} -sourcevocabularyfile %{srcvcb} -targetvocabularyfile %{trgvcb} -corpusfile %{snt} -outputfileprefix retrain/%{frnlang}-eng.dict -coocurrencefile %{cooc} 1>&2) 2> %{target}.log
	cat %{'retrain/{}-eng.dict.A3.final.part{}'.format(frnlang, chr(48 + i)) for i in range(int(ncpus))} | python3 ./src/python/dictsort.py > %{target}

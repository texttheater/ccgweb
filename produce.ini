### TOKENIZATION ##############################################################

[out/%{x}/%{user}.tok.iob]
dep.raw = raw/%{x}.raw
dep.txt2iob = src/python/txt2iob.py
dep.elephant = ext/elephant/elephant
dep.model = models/tok.iob/en.model
recipe =
	set -e
	set -o pipefail
	mkdir -p `dirname %{target}`
	export PATH=ext/elephant/src/wapiti:ext/elephant/src/elman:$PATH
	cat %{raw} | python3 %{txt2iob} | ./ext/viasock/viasock run --process-timeout 60 --server-timeout 86400 -t '^$' -T '^$' --log log/elephant/en.log %{elephant} -m %{model} -f iob -F iob | sed -e 's/\t/ /' > %{target}

[out/%{x}/%{user}.tok.off]
dep.iob = out/%{x}/%{user}.tok.iob
dep.iob2off = src/python/iob2off.py
recipe = cat %{iob} | python %{iob2off} > %{target}

[out/%{x}/%{user}.tok]
dep.off = out/%{x}/%{user}.tok.off
dep.off2tok = src/python/off2tok.py
recipe = cat %{off} | python %{off2tok} > %{target}

### SUPERTAGGING ##############################################################

# this is just a dummy, no supertag constraints yet
[out/%{x}/%{user}.super]
dep.off = out/%{x}/%{user}.tok.off
recipe = cat %{off} | sed -e 's/.*//' > %{target}

### PARSING ###################################################################

# TODO include span constraints (e.g. "there is a constituent from 7 22")
[out/%{x}/%{user}.parse]
dep.tok = out/%{x}/%{user}.tok
dep.super = out/%{x}/%{user}.super
dep.add_supertag_constraints = src/python/add_supertag_constraints.py
dep.cac_renumber = src/python/cac_renumber.py
dep.easyccg = ext/easyccg/easyccg.jar
#generic = %{'' if lang == 'en' else ' -g'}
generic =
dep.model = models/parse/en.model
recipe =
	set -e
	set -o pipefail
	cat %{tok} | python %{add_supertag_constraints} %{super} | ./ext/viasock/viasock run --process-timeout 60 --server-timeout 86400 --log log/easyccg/en.log --output-terminator '^$' --output-prelude 1 java -jar %{easyccg} --inputFormat constrained --model %{model}%{generic} --unrestrictedRules --rootCategories S[dcl] S[wq] S[q] NP S[b]\\NP S[intj] --outputFormat boxer | python %{cac_renumber} > %{target}

# Add tags from other layers to parse
[out/%{x}/%{user}.parse.tags]
dep.parse = out/%{x}/%{user}.parse
dep.insert = ./src/python/cac_addtags.py
deps = src/python/caclib.py
dep.off = out/%{x}/%{user}.tok.off
recipe = cat %{parse} | %{insert} %{off} from <(cut -d ' ' -f 1 %{off}) to <(cut -d ' ' -f 2 %{off}) > %{target}

### BOXING ####################################################################

# Run Boxer for derivations (XML output)
[out/%{x}/%{user}.der.xml%{projected}]
cond = %{projected in ('', '.projected')}
dep.parse = out/%{x}/%{user}.parse.tags%{projected}
dep.boxer = ext/boxer/boxer2
recipe = %{boxer} --input %{parse} --semantics der --resolve false --tense --instantiate --modal --theory sdrt --copula false --nn --elimeq --roles verbnet --format xml --warnings false --output %{target}
